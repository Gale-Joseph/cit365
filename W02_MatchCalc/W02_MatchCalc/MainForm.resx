<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>